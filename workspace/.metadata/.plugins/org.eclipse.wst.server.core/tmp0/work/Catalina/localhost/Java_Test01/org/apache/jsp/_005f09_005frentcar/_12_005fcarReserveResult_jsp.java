/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2020-01-21 04:39:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._005f09_005frentcar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import _09_rentcar.RentcarDao;
import _09_rentcar.Rentcar;
import java.text.SimpleDateFormat;
import java.util.Date;

public final class _12_005fcarReserveResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("_09_rentcar.RentcarDao");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("_09_rentcar.Rentcar");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t");

		request.setCharacterEncoding("UTF-8"); // 한글 처리
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
      _09_rentcar.CarReserve rbean = null;
      rbean = (_09_rentcar.CarReserve) _jspx_page_context.getAttribute("rbean", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (rbean == null){
        rbean = new _09_rentcar.CarReserve();
        _jspx_page_context.setAttribute("rbean", rbean, javax.servlet.jsp.PageContext.PAGE_SCOPE);
        out.write("\r\n");
        out.write("\t\t");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("rbean"), request);
        out.write('\r');
        out.write('\n');
        out.write('	');
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");

		// 로그인 처리
		String id = (String) session.getAttribute("id");
		if (id == null) {
	
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"로그인 후 예약이 가능 합니다.\");\r\n");
      out.write("\t\tlocation.href = '01_main.jsp?center=05_memberLogin.jsp';\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t");

		}
	
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write(" ");

	// 날짜 비교
	Date d1 = new Date();
	Date d2 = new Date();
	
	// 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	d1 = sdf.parse(rbean.getRday());
	d2 = sdf.parse(sdf.format(d2));		// format() 메서느는 SimpleDateFormat과 같은 역할(yyyy-MM-dd)

	// 날짜비교 메서드 사용
	int compare = d1.compareTo(d2);
	// 예약하려는 날짜가 현재 날짜보다 이전이라면 -1
	// 예약하려는 날짜와 현재 날짜가 같다면 0
	// 예약하려는 날짜가 현재 날짜보다 이후라면 1을 리턴
	// System.out.println(compare);
	if(compare < 0){
		// 오늘보다 이전 날짜를 선택했을 시

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"현재 시스템 날짜보다 이전 날짜는 선택할 수 없음\");\r\n");
      out.write("\t\thistory.go(-1);\r\n");
      out.write("\t</script>\t\t\t\r\n");
		
	} 

      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
	// 결과적으로 아무런 문제가 없다면 데이터 저장 후 결과 페이지 보여주기
	// 아이디 값이 빈 클래스에 없기에
	String id1 = (String)session.getAttribute("id");
	rbean.setId(id1);
	
	// 데이터 베이스에 빈 클래스 저장
	RentcarDao.instance.setReserveCar(rbean);
	
	// 차량 정보 얻어오기 
	Rentcar cbean = RentcarDao.instance.getOneCar(rbean.getNo());
	
	// 차량 총 금액
	int totalCar = cbean.getPrice() * rbean.getQty() * rbean.getDday();
	
	// 옵션 금액
	int usein = 0;
	// 선택 시(1), 10,000원 추가
	if(rbean.getUsein() == 1){ usein = 10000; }
	int usewifi = 0;
	if(rbean.getUsewifi() == 1){ usewifi = 10000; }
	int useseat = 0;
	if(rbean.getUseseat() == 1){ useseat = 10000; }
	int totalOption = (rbean.getQty() * rbean.getDday() * (usein + usewifi + useseat));

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr height=\"100\">\r\n");
      out.write("\t\t\t\t<td align=\"center\"> \r\n");
      out.write("\t\t\t\t\t<font size=\"6\" color=\"gray\"> 차량 예약 완료 화면 </font> \r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr height=\"100\">\r\n");
      out.write("\t\t\t\t<td align=\"center\"> \r\n");
      out.write("\t\t\t\t\t<img src=\"_09_imgCar/");
      out.print( cbean.getImg() );
      out.write("\" width=\"470\" />\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\t\r\n");
      out.write("\t\t\t<tr height=\"50\">\r\n");
      out.write("\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t<font size=\"5\" color=\"red\"> 차량 총예약 금액 ");
      out.print( totalCar );
      out.write(" 원 </font>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr height=\"50\">\r\n");
      out.write("\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t<font size=\"5\" color=\"red\"> 차량 총옵션 금액 ");
      out.print( totalOption );
      out.write(" 원 </font>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\t\t\t\r\n");
      out.write("\t\t\t<tr height=\"50\">\r\n");
      out.write("\t\t\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t\t\t<font size=\"5\" color=\"red\"> 차량 총 금액 ");
      out.print( totalOption + totalCar );
      out.write(" 원 </font>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\t\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
