/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2020-01-17 04:53:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._005f07_005fboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import _07_board.BoardDao;
import _07_board.Board;

public final class _05_005fboard_005finfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("_07_board.Board");
    _jspx_imports_classes.add("_07_board.BoardDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	// 공백 제거 후, 정수형으로 바꿈
	int num = Integer.parseInt(request.getParameter("num"));

	
	
	// BoardBean 타입으로하나의 게시글을 리턴
	Board bean = BoardDao.instance.getOneBoard(num);
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("\t<h2> 게시글 보기 </h2>\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr height=\"40\">\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"120\"> 글번호 </td>\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"180\"> ");
      out.print( bean.getNum() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"120\"> 조회수 </td>\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"180\"> ");
      out.print( bean.getReadcount() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=\"40\">\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"120\"> 작성자 </td>\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"180\"> ");
      out.print( bean.getWriter() );
      out.write("</td>\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"120\"> 작성일 </td>\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"180\"> ");
      out.print( bean.getReg_date() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=\"40\">\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"120\"> 이메일 </td>\r\n");
      out.write("\t\t\t<td align=\"center\" colspan=\"3\"> ");
      out.print( bean.getEmail() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=\"40\">\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"120\"> 제목 </td>\r\n");
      out.write("\t\t\t<td align=\"center\" colspan=\"3\"> ");
      out.print( bean.getSubject() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=\"80\">\r\n");
      out.write("\t\t\t<td align=\"center\" width=\"120\"> 글 내용 </td>\r\n");
      out.write("\t\t\t<td align=\"center\" colspan=\"3\"> ");
      out.print( bean.getContent() );
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr height=\"40\">\r\n");
      out.write("\t\t\t<td align=\"center\" colspan=\"4\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"답글쓰기\" onclick=\"location.href='10_board_reWrite.jsp?num=");
      out.print( bean.getNum() );
      out.write("'\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"수정하기\" onclick=\"location.href='06_board_update.jsp?num=");
      out.print( bean.getNum() );
      out.write("'\" >\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"삭제하기\" onclick=\"location.href='08_board_delete.jsp?num=");
      out.print( bean.getNum() );
      out.write("'\" >\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"목록보기\" onclick=\"location.href='04_board_list.jsp'\" >\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
